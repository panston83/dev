// querydsl 추가
//  (gradle 5.0 이상부터는 옵션을 이렇게 넣어주어야 함)
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // querydsl 사용을 위해 추가된 항목
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.7.2'
    implementation group: 'org.springframework.data', name: 'spring-data-jdbc', version: '2.4.2'
//    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.22'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.4.0'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
   // implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'com.google.code.gson:gson:2.8.6'
   // implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.1'
    // https://mavenlibs.com/maven/dependency/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

    // https://mavenlibs.com/maven/dependency/org.apache.httpcomponents/httpcore
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.15'

    // https://mavenlibs.com/maven/dependency/org.apache.httpcomponents/httpclient
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    // https://mavenlibs.com/maven/dependency/commons-logging/commons-logging
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.7.3'
    // https://mvnrepository.com/artifact/org.projectreactor/reactor-spring
    implementation group: 'org.projectreactor', name: 'reactor-spring', version: '1.0.1.RELEASE'

    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
}

def webappDir = "$projectDir/src/main/reactcome"

sourceSets {
    main {
        resources {
            srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "buildReact"
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$webappDir"
    inputs.dir "$webappDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

task installReact(type: Exec) {
    workingDir "$webappDir"
    inputs.dir "$webappDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install'
    } else {
        commandLine "npm", "audit", "fix"
        commandLine 'npm', 'install'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

//  (gradle 5.0 이상부터는 옵션을 이렇게 넣어주어야 함)
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 추가 끝
